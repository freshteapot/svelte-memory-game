{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../card.svelte",
    "../../chessboard.svelte",
    "../../dashboard.svelte",
    "../../logo.svelte",
    "../../match_info.svelte",
    "../../score.svelte",
    "../../play_status.svelte",
    "../../settings.svelte",
    "../../game.svelte"
  ],
  "sourcesContent": [
    "<script>\n  //import { mapActions } from 'vuex';\n  import store from \"../../store/game.js\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let key;\n  export let option = {\n    flipped: false,\n    name: \"\",\n    img: \"\",\n    show: \"img\"\n  };\n\n  function flip() {\n    // action flipcard?\n    if (option.flipped) {\n      return;\n    }\n    //option.flipped = !option.flipped;\n    //this.flipCard(this.option);\n    store.flipCard(option);\n    //this.$emit('flipped', this.option);\n    dispatch(\"flipped\", option);\n  }\n\n  $: flipped = option.flipped ? \"flipped\" : \"\";\n</script>\n\n<style>\n  .container {\n    width: 100px;\n    height: 121px;\n    margin-right: 3px;\n    cursor: pointer;\n    position: relative;\n    perspective: 800px;\n  }\n\n  .card {\n    width: 100%;\n    height: 100%;\n    transition: transform 1s;\n    transform-style: preserve-3d;\n  }\n\n  .card.flipped {\n    transform: rotateY(180deg);\n  }\n\n  .card img,\n  .card p {\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    backface-visibility: hidden;\n    -webkit-backface-visibility: hidden;\n  }\n\n  .card p {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .card .back {\n    background: white;\n    transform: rotateY(0deg);\n  }\n\n  .card .front {\n    background: white;\n    transform: rotateY(180deg);\n  }\n\n  @media screen and (max-width: 450px) {\n    .container {\n      width: 92px;\n      height: 111px;\n      margin-right: 1px;\n    }\n  }\n\n  @media screen and (max-width: 380px) {\n    .container {\n      width: 85px;\n      height: 102px;\n      margin-right: 1px;\n    }\n  }\n\n  @media screen and (max-width: 360px) {\n    .container {\n      width: 70px;\n      height: 84px;\n      margin-right: 1px;\n    }\n  }\n</style>\n\n<div class=\"container\" on:click={flip}>\n  <div class=\"card {flipped}\">\n    {#if option.show == 'image'}\n      <img class=\"front\" src={option.img} />\n    {/if}\n    {#if option.show == 'text'}\n      <p class=\"front\">{option.name}</p>\n    {/if}\n    <img class=\"back\" src=\"data/back.png\" />\n  </div>\n</div>\n",
    "<script>\n  import store from \"../../store/game.js\";\n\n  import Card from \"./card.svelte\";\n  import { STATUS } from \"../../store/status_enum.js\";\n  import { copyObject } from \"../../lib/utils.js\";\n\n  export let cards = [];\n  export let lastCard = null;\n\n  function onFlipped(e) {\n    const card = e.detail;\n    if ($store.status === STATUS.READY) {\n      store.updateStatus(STATUS.PLAYING);\n    }\n\n    if (!lastCard) {\n      lastCard = card;\n      return;\n    }\n\n    if (lastCard !== card && lastCard.name === card.name) {\n      lastCard = null;\n      store.match();\n      return $store.leftMatched || store.updateStatus(STATUS.PASS);\n    }\n\n    const oldCard = lastCard;\n    lastCard = null;\n\n    setTimeout(() => {\n      store.flipCards([oldCard, card]);\n    }, 1000);\n  }\n\n  /*\n    computed: {\n      ...mapGetters([\"leftMatched\", \"cards\", \"status\"])\n    },\n\n    methods: {\n      ...mapActions([\"updateStatus\", \"match\", \"flipCards\"]),\n\n      onFlipped: function(e) {\n        if (this.status === STATUS.READY) {\n          this.updateStatus(STATUS.PLAYING);\n        }\n        if (!this.lastCard) {\n          return (this.lastCard = e);\n        }\n        if (this.lastCard !== e && this.lastCard.cardName === e.cardName) {\n          this.lastCard = null;\n          this.match();\n          return this.leftMatched || this.updateStatus(STATUS.PASS);\n        }\n        let lastCard = this.lastCard;\n        this.lastCard = null;\n        setTimeout(() => {\n          this.flipCards([lastCard, e]);\n        }, 1000);\n      }\n    },\n  };\n    */\n</script>\n\n<style>\n  .chessboard {\n    margin-top: 20px;\n    width: 100%;\n    background-color: #fff;\n    height: 530px;\n    border-radius: 4px;\n    padding: 10px 5px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n    align-content: space-around;\n  }\n\n  .container:nth-child(4n) {\n    margin-right: 0px;\n  }\n\n  @media screen and (max-width: 450px) {\n    .chessboard {\n      height: 480px;\n      padding: 10px 0px;\n    }\n  }\n  @media screen and (max-width: 370px) {\n    .chessboard {\n      height: 450px;\n    }\n  }\n</style>\n\n<div class=\"chessboard\">\n  {#each cards as card, index}\n    <Card key={index} option={card} on:flipped={onFlipped} />\n  {/each}\n</div>\n",
    "<script>\n  import store from \"../../store/game.js\";\n  import Logo from \"./logo.svelte\";\n  import MatchInfo from \"./match_info.svelte\";\n  import Score from \"./score.svelte\";\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let leftMatched;\n  export let highestSpeed;\n\n  function onTryAgain() {\n    dispatch(\"restart\");\n  }\n</script>\n\n<style>\n  .status-bar {\n    width: 100%;\n    height: 100px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .try-again {\n    margin-top: 2rem;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n  }\n</style>\n\n<div class=\"status-bar\">\n  <Logo />\n  <MatchInfo bind:leftMatched />\n  <Score bind:highestSpeed />\n</div>\n\n{#if $store.displayEnd}\n  <div class=\"status-bar\">\n    <button class=\"try-again\" on:click={onTryAgain}>Try again?</button>\n  </div>\n{/if}\n",
    "<style>\n  .logo {\n    width: 160px;\n    height: 100px;\n    line-height: 90px;\n    padding: 5px;\n    border-radius: 5px;\n    background-color: #5979ac;\n    color: #fff;\n    text-align: center;\n  }\n  a {\n    text-decoration: none;\n    color: #fff;\n  }\n\n  @media screen and (max-width: 450px) {\n    .logo {\n      width: 150px;\n    }\n  }\n\n  @media screen and (max-width: 380px) {\n    .logo {\n      width: 140px;\n    }\n  }\n\n  @media screen and (max-width: 360px) {\n    .logo {\n      width: 110px;\n    }\n    a {\n      font-size: 18px;\n    }\n  }\n</style>\n\n<h1 class=\"logo\">\n  <a href=\"https://github.com/freshteapot/svelte-memory-game\" target=\"_blank\">\n    Memory\n  </a>\n</h1>\n",
    "<script>\n  import store from \"../../store/game.js\";\n  //import { mapGetters } from 'vuex';\n  /*\nexport default {\n    computed: {\n        ...mapGetters([\n            'leftMatched'\n        ])\n    }\n}\n*/\n  export let leftMatched = 8;\n</script>\n\n<style>\n  .board {\n    width: 120px;\n    height: 100px;\n    padding: 10px;\n    background-color: #bbada0;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    color: #eae0d1;\n  }\n\n  span {\n    font-size: 19px;\n    font-weight: bold;\n    display: block;\n    width: 100%;\n    text-align: center;\n  }\n\n  h2 {\n    color: #fff;\n  }\n  @media screen and (max-width: 450px) {\n    .board {\n      width: 105px;\n    }\n    span {\n      font-size: 17px;\n    }\n  }\n\n  @media screen and (max-width: 380px) {\n    .board {\n      width: 95px;\n    }\n  }\n\n  @media screen and (max-width: 360px) {\n    .board {\n      width: 90px;\n    }\n    span {\n      font-size: 15px;\n    }\n  }\n</style>\n\n<div class=\"board\">\n  <span>Pairs Left To Match</span>\n  <h2>{leftMatched}</h2>\n</div>\n",
    "<script>\n  export let highestSpeed;\n</script>\n\n<style>\n  .score {\n    width: 120px;\n    height: 100px;\n    padding: 10px;\n    background-color: #bbada0;\n    border-radius: 5px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    color: #eae0d1;\n  }\n\n  span {\n    font-size: 19px;\n    font-weight: bold;\n    display: block;\n    width: 100%;\n    text-align: center;\n  }\n\n  h2 {\n    color: #fff;\n  }\n  @media screen and (max-width: 450px) {\n    .score {\n      width: 105px;\n    }\n    span {\n      font-size: 17px;\n    }\n  }\n  @media screen and (max-width: 380px) {\n    .score {\n      width: 95px;\n    }\n  }\n\n  @media screen and (max-width: 360px) {\n    .score {\n      width: 90px;\n    }\n    span {\n      font-size: 15px;\n    }\n  }\n</style>\n\n<div class=\"score\">\n  <span>Highest Speed</span>\n  <h2>{highestSpeed}</h2>\n</div>\n",
    "<script>\n  import store from \"../../store/game.js\";\n  import { STATUS } from \"../../store/status_enum.js\";\n  import Settings from \"./settings.svelte\";\n\n  export let status = STATUS.READY;\n  export let elapsedMs = \"10\";\n  export let gameSettings;\n\n  function showSettings() {\n    store.toggleSettings(true);\n  }\n</script>\n\n<style>\n  .status-bar {\n    width: 100%;\n    height: 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .elapsed {\n    right: 10px;\n    font-size: 15px;\n    font-weight: normal;\n  }\n</style>\n\n<div class=\"status-bar\">\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    enable-background=\"new 0 0 24 24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    width=\"24\"\n    on:click={showSettings}>\n    <g>\n      <path d=\"M0,0h24v24H0V0z\" fill=\"none\" />\n      <path\n        d=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61\n        l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41\n        h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87\n        C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58\n        c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54\n        c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96\n        c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z\n        M12,15.6c-1.98,0-3.6-1.62-3.6-3.6\n        s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\" />\n    </g>\n  </svg>\n\n  {#if status === STATUS.PLAYING}\n    <span>Playing</span>\n  {/if}\n\n  <span class=\"elapsed\">{elapsedMs} s</span>\n\n  {#if $store.displaySettings}\n    <Settings on:settingsClose settings={gameSettings} />\n  {/if}\n</div>\n",
    "<script>\n  import store from \"../../store/game.js\";\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n  const close = () => dispatch(\"close\");\n\n  export let settings = {\n    show: \"image\",\n    gameSize: 2\n  };\n\n  let show = settings.show;\n  let gameSize = settings.gameSize;\n  function handleClose() {\n    store.toggleSettings();\n    dispatch(\"settingsClose\", {\n      show,\n      gameSize\n    });\n  }\n</script>\n\n<style>\n  .modal-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n  }\n\n  .modal {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: calc(100vw - 4em);\n    max-width: 32em;\n    max-height: calc(100vh - 4em);\n    overflow: auto;\n    transform: translate(-50%, -50%);\n    padding: 1em;\n    border-radius: 0.2em;\n    background: white;\n  }\n</style>\n\n<svelte:options tag={null} accessors={true} />\n\n<div class=\"modal-background\" on:click={handleClose} />\n<div class=\"modal\" role=\"dialog\" aria-modal=\"true\">\n\n  <slot />\n\n  <p>\n    <span>How many tiles</span>\n    <input type=\"number\" bind:value={gameSize} max={8} min={2} />\n  </p>\n\n  <p>\n    <span>Do you want to see</span>\n    <select bind:value={show}>\n      <option value=\"image\">Image</option>\n      <option value=\"text\">Text</option>\n    </select>\n  </p>\n\n  <button class=\"br3\" on:click={handleClose}>close</button>\n</div>\n",
    "<script>\n  import store from \"../store/game.js\";\n\n  import Dashboard from \"./dashboard/dashboard.svelte\";\n  import Chessboard from \"./card/chessboard.svelte\";\n  import PlayStatus from \"./footer/play_status.svelte\";\n  import { STATUS } from \"../store/status_enum.js\";\n  import { shuffle } from \"../lib/shuffle.js\";\n\n  export let gameData = [];\n\n  let show = \"text\";\n  let settings = {\n    show: \"image\",\n    gameSize: gameData.length\n  };\n\n  function restartGame() {\n    return {\n      leftMatched: settings.gameSize,\n      highestSpeed: localStorage.getItem(\"highestSpeed\") || \"\",\n      status: STATUS.READY,\n      cards: shuffle(gameData.slice(0, settings.gameSize)).map(item => {\n        item.flipped = false;\n        item.show = settings.show;\n        return item;\n      }),\n      elapsedMs: 0,\n      displayEnd: false,\n      displayNameInput: false,\n      displaySettings: false,\n      ranks: [],\n      userName: localStorage.getItem(\"userName\") || \"\"\n    };\n  }\n\n  function triggerRestart() {\n    store.reset(restartGame());\n  }\n\n  function settingsClose(event) {\n    settings = event.detail;\n    triggerRestart();\n  }\n\n  triggerRestart();\n</script>\n\n<style>\n  .game-panel {\n    position: relative;\n    width: 450px;\n    height: 670px;\n    border: 4px solid #bdbdbd;\n    border-radius: 2px;\n    background-color: #faf8ef;\n    padding: 10px;\n    display: flex;\n    flex-direction: column;\n  }\n\n  @media screen and (max-width: 450px) {\n    .game-panel {\n      width: 100%;\n      height: 100%;\n      justify-content: space-around;\n    }\n  }\n</style>\n\n<div class=\"game-panel\">\n  <Dashboard\n    leftMatched={$store.leftMatched}\n    highestSpeed={$store.highestSpeed}\n    on:restart={triggerRestart} />\n  <Chessboard cards={$store.cards} />\n  <PlayStatus\n    status={$store.status}\n    elapsedMs={$store.elapsedMs}\n    gameSettings={settings}\n    on:settingsClose={settingsClose} />\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}